name: CI

on: [push, pull_request]

jobs:
  build-linux:
    runs-on: ubuntu-24.04

    container:
      image: ubuntu:24.04
      options: --privileged
    env:
      PYTHON_VERSION: 3.12.2

    steps:
    - uses: actions/checkout@v4
 
    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y lsb-release libusb-1.0-0-dev libudev-dev ruby ruby-dev rubygems build-essential desktop-file-utils wget unzip zlib1g-dev liblzma-dev libssl-dev git imagemagick file libfuse2
        wget -c $(wget -q https://api.github.com/repos/AppImageCommunity/pkg2appimage/releases -O - | grep "pkg2appimage-.*-x86_64.AppImage" | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
        chmod +x ./pkg2appimage-*.AppImage
        gem install --no-document fpm

    - uses: actions/setup-python@v5
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Setup venv
      run: |
        python3 -m venv venv
        . venv/bin/activate
        pip install -r requirements.txt

    - name: Build
      run: |
        . venv/bin/activate
        pyinstaller misc/Vial.spec
        deactivate
        cp src/main/icons/linux/1024.png dist/Vial/Vial.png
        cp misc/Vial.desktop dist/Vial/
        cp misc/AppRun dist/Vial/
        ./pkg2appimage-*.AppImage --appdir dist/Vial --output appimage
        mv Vial-*-x86_64.AppImage Vial-x86_64.AppImage

    - uses: actions/upload-artifact@v4
      with:
        name: vial-linux
        path: Vial-x86_64.AppImage

  build-mac:
    runs-on: macos-13
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.9

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{env.PYTHON_VERSION}}
        cache: pip

    - name: Setup venv
      run: |
        python3 -m venv venv
        . venv/bin/activate
        pip install -r requirements.txt

    - name: Build
      run: |
        . venv/bin/activate
        pyinstaller misc/Vial.spec
        hdiutil create -volname Vial -srcfolder "target/Vial.app" -ov -format UDZO vial-mac.dmg

    - uses: actions/upload-artifact@v4
      with:
        name: vial-mac
        path: vial-mac.dmg

  build-win:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Setup venv
      run: |
        python -m venv venv
        . .\venv\Scripts\activate.ps1
        pip install -r requirements.txt

    - name: Install NSIS
      run: |
        Invoke-WebRequest "https://github.com/vial-kb/vial-deps/releases/download/v1/nsis-3.06.1-setup.exe" -UserAgent "wget" -OutFile nsis-3.06.1-setup.exe
        if ((Get-FileHash nsis-3.06.1-setup.exe -Algorithm sha256).Hash -ne "f60488a676308079bfdf6845dc7114cfd4bbff47b66be4db827b89bb8d7fdc52") { Write-Error 'SHA256 mismatch' }
        Start-Process -FilePath "nsis-3.06.1-setup.exe" -ArgumentList "/S", "/D=C:\Program Files (x86)\NSIS" -NoNewWindow -Wait

    - name: Build
      run: |
        . .\venv\Scripts\activate.ps1
        pyinstaller misc/Vial.spec
        Compress-Archive -Path "dist/Vial" -DestinationPath vial-win.zip

    - uses: actions/upload-artifact@v4
      with:
        name: vial-win
        path: vial-win.zip

    - name: Create installer
      run: |
        $env:Path += ";C:\Program Files (x86)\NSIS"
        cd dist/Vial
        makensis ../../src/installer/windows/Installer.nsi

    - uses: actions/upload-artifact@v4
      with:
        name: vial-win-installer
        path: target\VialSetup.exe
